// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hotel_api.Data;

namespace hotel_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220712104757_Update_Rooms_User_FK_Name")]
    partial class Update_Rooms_User_FK_Name
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("hotel_api.Models.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TV"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cofee Machine"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ocean View"
                        });
                });

            modelBuilder.Entity("hotel_api.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Amman",
                            Country = "Jordan",
                            Name = "Async Inn",
                            Phone = "06-485236",
                            Status = "Available"
                        },
                        new
                        {
                            Id = 2,
                            City = "Irbid",
                            Country = "Jordan",
                            Name = "Async Inn",
                            Phone = "06-485236",
                            Status = "Closed"
                        },
                        new
                        {
                            Id = 3,
                            City = "Aqaba",
                            Country = "Jordan",
                            Name = "Async Inn",
                            Phone = "06-485236",
                            Status = "Available"
                        });
                });

            modelBuilder.Entity("hotel_api.Models.Room", b =>
                {
                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<string>("CustomerUsername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId", "RoomNumber");

                    b.HasIndex("CustomerUsername");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            RoomNumber = 1,
                            Phone = 123
                        },
                        new
                        {
                            HotelId = 1,
                            RoomNumber = 2,
                            Phone = 124
                        },
                        new
                        {
                            HotelId = 1,
                            RoomNumber = 3,
                            Phone = 125
                        },
                        new
                        {
                            HotelId = 2,
                            RoomNumber = 1,
                            Phone = 122
                        },
                        new
                        {
                            HotelId = 3,
                            RoomNumber = 1,
                            Phone = 124
                        },
                        new
                        {
                            HotelId = 3,
                            RoomNumber = 2,
                            Phone = 125
                        });
                });

            modelBuilder.Entity("hotel_api.Models.RoomAmenity", b =>
                {
                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomNumber", "AmenityId", "HotelId");

                    b.HasIndex("AmenityId");

                    b.HasIndex("HotelId", "RoomNumber");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("hotel_api.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("hotel_api.Models.Room", b =>
                {
                    b.HasOne("hotel_api.Models.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerUsername");

                    b.HasOne("hotel_api.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("hotel_api.Models.RoomAmenity", b =>
                {
                    b.HasOne("hotel_api.Models.Amenity", "Amenity")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hotel_api.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("HotelId", "RoomNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("hotel_api.Models.Amenity", b =>
                {
                    b.Navigation("RoomAmenities");
                });

            modelBuilder.Entity("hotel_api.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("hotel_api.Models.Room", b =>
                {
                    b.Navigation("RoomAmenities");
                });
#pragma warning restore 612, 618
        }
    }
}
